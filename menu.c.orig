#include <gtk/gtk.h>
#include <stdlib.h>
#include <string.h>
#include "menu.h"


struct list
{
    void *data;
    struct list *next;
};


char *prov_info[PINFO_NUM]=
{
    "省会城市名",
    "电话区号",
    "人口数",
    "地理位置"
};



GtkWidget *main_window,*vbox_main,*vbox_query;

//callback functions are defined below
void cb_color(GtkWidget *widget,gpointer data)
{
    return;
}

void cb_tree(GtkWidget *widget,gpointer data)
{
    return ;
}

void cb_info(GtkWidget *widget,gpointer data)
{

    gtk_widget_hide(vbox_main);
}

void cb_quit(GtkWidget *widget,gpointer data)
{
    return;
}

GtkWidget * query_box()
{
    int i,j;
    GtkWidget *vbox,*hbox;
    GtkWidget *entrynum,*entry[PINFO_NUM],*buttons[PINFO_NUM+2],*label;
    //entrynum is for the province number.
    struct list *head[PINFO_NUM],*p=NULL;
    memset(head,0,PINFO_NUM*sizeof(struct list*));
    //window=gtk_window_new(GTK_WINDOW_TOPLEVEL);
    //window=gtk_scrolled_window_new(hadj,vadj);
    //g_signal_connect(window,"delete-event",G_CALLBACK(gtk_main_quit),NULL);
    vbox=gtk_vbox_new(FALSE,0);
    hbox=gtk_hbox_new(FALSE,0);
    gtk_box_pack_start(GTK_BOX(vbox),hbox,FALSE,FALSE,0);
    label=gtk_label_new("District name");
    gtk_box_pack_start(GTK_BOX(hbox),label,FALSE,FALSE,0);
    entrynum=gtk_entry_new();
    gtk_box_pack_start(GTK_BOX(hbox),entrynum,FALSE,FALSE,0);


    //gtk_container_add(GTK_CONTAINER(window),vbox);

    for(i=0;i<PINFO_NUM;i++)
    {
        hbox=gtk_hbox_new(FALSE,0);
        gtk_box_pack_start(GTK_BOX(vbox),hbox,TRUE,TRUE,0);
        entry[i]=gtk_entry_new();
        gtk_box_pack_start(GTK_BOX(hbox),entry[i],TRUE,TRUE,0);
        gtk_entry_set_editable(GTK_ENTRY(entry[i]),FALSE);
        p=(struct list*)malloc(sizeof(struct list));
        p->data=malloc(sizeof(GtkWidget *));
        *(GtkWidget**)p->data=entrynum;//input entry
        p->next=head[i];
        head[i]=p;

        p=(struct list*)malloc(sizeof(struct list));
        p->data=malloc(sizeof(GtkWidget *));
        *(GtkWidget**)p->data=entry[i];//output entry
        p->next=head[i];
        head[i]=p;


        buttons[i]=gtk_button_new_with_label(prov_info[i]);
        //g_signal_connect(buttons[i],"clicked",G_CALLBACK(cb_info),head+i);
        gtk_box_pack_start(GTK_BOX(hbox),buttons[i],TRUE,TRUE,0);
    }

    hbox=gtk_hbox_new(FALSE,0);
    gtk_box_pack_start(GTK_BOX(vbox),hbox,FALSE,FALSE,0);
    buttons[PINFO_NUM]=gtk_button_new_with_label("返回");
    gtk_box_pack_start(GTK_BOX(hbox),buttons[PINFO_NUM],FALSE,FALSE,0);
    //g_signal_connect(buttons[PINFO_NUM],"clicked",G_CALLBACK(NULL),NULL);

    hbox=gtk_hbox_new(FALSE,0);
    gtk_box_pack_start(GTK_BOX(vbox),hbox,FALSE,FALSE,0);
    buttons[PINFO_NUM+1]=gtk_button_new_with_label("退出");
    gtk_box_pack_start(GTK_BOX(hbox),buttons[PINFO_NUM+1],FALSE,FALSE,0);
    //g_signal_connect(buttons[PINFO_NUM+1],"clicked",G_CALLBACK(NULL),NULL);


    return vbox;
}


GtkWidget *main_box()
{
    GtkWidget *vbox,*hbox,*button[FUN_NUM];
    void (*fun[FUN_NUM])(GtkWidget *,gpointer)=
    {
        cb_color,
        cb_tree,
        cb_info,
        cb_quit
    };

    int i;
    char *fun_name[]=
    {
        "染色求解",
        "建立通信网络",
        "查询省份信息",
        "退出系统"
    };
    vbox=gtk_vbox_new(FALSE,0);
    for(i=0;i<FUN_NUM;i++)
    {
        hbox=gtk_hbox_new(FALSE,0);
        button[i]=gtk_button_new_with_label(fun_name[i]);
        //g_signal_connect(button[i],"clicked",G_CALLBACK(fun[i]),NULL);
        gtk_box_pack_start(GTK_BOX(hbox),button[i],TRUE,TRUE,0);
    }
    return vbox;
}

int main_menu()
{
    GtkWidget *window=gtk_window_new(GTK_WINDOW_TOPLEVEL);
    GtkWidget *vbox=gtk_vbox_new(FALSE,0);
    GtkWidget *box_main=main_box();
    GtkWidget *box_query=query_box();
    GtkWidget *button=gtk_button_new_with_label("test");

    gtk_container_add(GTK_CONTAINER(window),vbox);

    gtk_box_pack_start(GTK_BOX(vbox),box_main,FALSE,FALSE,0);
    ///gtk_box_pack_start(GTK_BOX(vbox),box_query,FALSE,FALSE,0);

    gtk_box_pack_start(GTK_BOX(vbox),button,FALSE,FALSE,0);
    gtk_widget_show_all(box_main);
    gtk_widget_show_all(vbox);
    gtk_widget_show(window);
    gtk_main();
    return 1;
}

int main(int argc,char **argv)
{
    gtk_init(&argc,&argv);
    main_menu();
    return 1;
}
